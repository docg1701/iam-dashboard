{
  "numTotalTestSuites": 65,
  "numPassedTestSuites": 61,
  "numFailedTestSuites": 4,
  "numPendingTestSuites": 0,
  "numTotalTests": 121,
  "numPassedTests": 120,
  "numFailedTests": 1,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "snapshot": {
    "added": 0,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0,
    "didUpdate": false
  },
  "startTime": 1755251681715,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useClients hooks", "clientsQueryKeys"],
          "fullName": "useClients hooks clientsQueryKeys should generate correct query keys",
          "status": "passed",
          "title": "should generate correct query keys",
          "duration": 3.057237999999984,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useCreateClient"],
          "fullName": "useClients hooks useCreateClient should create a client successfully",
          "status": "passed",
          "title": "should create a client successfully",
          "duration": 65.01235500000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useCreateClient"],
          "fullName": "useClients hooks useCreateClient should handle create client error",
          "status": "passed",
          "title": "should handle create client error",
          "duration": 54.164176999999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useGetClient"],
          "fullName": "useClients hooks useGetClient should fetch a client successfully",
          "status": "passed",
          "title": "should fetch a client successfully",
          "duration": 54.829110000000014,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useGetClient"],
          "fullName": "useClients hooks useGetClient should not fetch when disabled",
          "status": "passed",
          "title": "should not fetch when disabled",
          "duration": 1.7946060000000443,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useGetClient"],
          "fullName": "useClients hooks useGetClient should handle fetch client error",
          "status": "passed",
          "title": "should handle fetch client error",
          "duration": 53.17271299999993,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useListClients"],
          "fullName": "useClients hooks useListClients should fetch clients list successfully",
          "status": "passed",
          "title": "should fetch clients list successfully",
          "duration": 53.80664799999988,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useListClients"],
          "fullName": "useClients hooks useListClients should handle list clients error",
          "status": "passed",
          "title": "should handle list clients error",
          "duration": 53.84635299999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useUpdateClient"],
          "fullName": "useClients hooks useUpdateClient should update a client successfully",
          "status": "passed",
          "title": "should update a client successfully",
          "duration": 53.462864999999965,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useUpdateClient"],
          "fullName": "useClients hooks useUpdateClient should handle update client error",
          "status": "passed",
          "title": "should handle update client error",
          "duration": 52.72661900000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useDeleteClient"],
          "fullName": "useClients hooks useDeleteClient should delete a client successfully",
          "status": "passed",
          "title": "should delete a client successfully",
          "duration": 53.42027600000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["useClients hooks", "useDeleteClient"],
          "fullName": "useClients hooks useDeleteClient should handle delete client error",
          "status": "passed",
          "title": "should handle delete client error",
          "duration": 54.22379799999999,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1755251682519,
      "endTime": 1755251683073.2239,
      "status": "passed",
      "message": "",
      "name": "/home/galvani/dev/iam-dashboard/apps/web/src/hooks/__tests__/useClients.test.tsx"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ClientForm", "Rendering"],
          "fullName": "ClientForm Rendering should render form for new client",
          "status": "passed",
          "title": "should render form for new client",
          "duration": 117.60276899999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Rendering"],
          "fullName": "ClientForm Rendering should render form for editing client",
          "status": "passed",
          "title": "should render form for editing client",
          "duration": 10.292238999999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Rendering"],
          "fullName": "ClientForm Rendering should render cancel button when onCancel is provided",
          "status": "passed",
          "title": "should render cancel button when onCancel is provided",
          "duration": 34.58725400000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Rendering"],
          "fullName": "ClientForm Rendering should not render cancel button when onCancel is not provided",
          "status": "passed",
          "title": "should not render cancel button when onCancel is not provided",
          "duration": 23.27195299999994,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Rendering"],
          "fullName": "ClientForm Rendering should show debug info in development mode",
          "status": "passed",
          "title": "should show debug info in development mode",
          "duration": 8.78175299999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Rendering"],
          "fullName": "ClientForm Rendering should not show debug info in non-development mode",
          "status": "passed",
          "title": "should not show debug info in non-development mode",
          "duration": 5.163968000000068,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "Name Field"],
          "fullName": "ClientForm Form Validation Name Field should validate minimum name length",
          "status": "passed",
          "title": "should validate minimum name length",
          "duration": 83.88714400000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "Name Field"],
          "fullName": "ClientForm Form Validation Name Field should validate maximum name length",
          "status": "passed",
          "title": "should validate maximum name length",
          "duration": 238.13609800000017,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "Name Field"],
          "fullName": "ClientForm Form Validation Name Field should accept valid name",
          "status": "passed",
          "title": "should accept valid name",
          "duration": 82.20099099999993,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "CPF Field"],
          "fullName": "ClientForm Form Validation CPF Field should format CPF in real-time",
          "status": "passed",
          "title": "should format CPF in real-time",
          "duration": 56.859688000000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "CPF Field"],
          "fullName": "ClientForm Form Validation CPF Field should validate CPF and show success indicator",
          "status": "passed",
          "title": "should validate CPF and show success indicator",
          "duration": 61.83917100000008,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "CPF Field"],
          "fullName": "ClientForm Form Validation CPF Field should show error indicator for invalid CPF",
          "status": "passed",
          "title": "should show error indicator for invalid CPF",
          "duration": 60.51418200000012,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "CPF Field"],
          "fullName": "ClientForm Form Validation CPF Field should validate minimum CPF length",
          "status": "failed",
          "title": "should validate minimum CPF length",
          "duration": 10002.500321,
          "failureMessages": [
            "Error: STACK_TRACE_ERROR\n    at task (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:638:27)\n    at Object.<anonymous> (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:662:16)\n    at Object.<anonymous> (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:458:28)\n    at chain (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:369:14)\n    at /home/galvani/dev/iam-dashboard/apps/web/tests/__tests__/components/ClientForm.test.tsx:209:7\n    at file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:734:40\n    at runWithSuite (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:1849:8)\n    at Object.collect (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:734:10)\n    at Object.collect (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:738:54)\n    at Object.collect (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:738:46)\n    at Object.collect (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:738:46)\n    at collectTests (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:1179:25)\n    at startTests (file:///home/galvani/dev/iam-dashboard/node_modules/@vitest/runner/dist/chunk-hooks.js:1817:17)\n    at file:///home/galvani/dev/iam-dashboard/node_modules/vitest/dist/chunks/runBaseTests.9Ij9_de-.js:117:26\n    at withEnv (file:///home/galvani/dev/iam-dashboard/node_modules/vitest/dist/chunks/runBaseTests.9Ij9_de-.js:84:3)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "CPF Field"],
          "fullName": "ClientForm Form Validation CPF Field should validate CPF using external library",
          "status": "passed",
          "title": "should validate CPF using external library",
          "duration": 125.85871599999882,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "CPF Field"],
          "fullName": "ClientForm Form Validation CPF Field should only allow numeric input in CPF field",
          "status": "passed",
          "title": "should only allow numeric input in CPF field",
          "duration": 108.31068799999957,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Validation", "CPF Field"],
          "fullName": "ClientForm Form Validation CPF Field should limit CPF input to 14 characters",
          "status": "passed",
          "title": "should limit CPF input to 14 characters",
          "duration": 95.00830999999926,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientForm",
            "Form Validation",
            "Birth Date Field"
          ],
          "fullName": "ClientForm Form Validation Birth Date Field should validate required birth date",
          "status": "passed",
          "title": "should validate required birth date",
          "duration": 44.72711700000036,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientForm",
            "Form Validation",
            "Birth Date Field"
          ],
          "fullName": "ClientForm Form Validation Birth Date Field should validate minimum age (16 years)",
          "status": "passed",
          "title": "should validate minimum age (16 years)",
          "duration": 78.64078999999947,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientForm",
            "Form Validation",
            "Birth Date Field"
          ],
          "fullName": "ClientForm Form Validation Birth Date Field should validate maximum age (120 years)",
          "status": "passed",
          "title": "should validate maximum age (120 years)",
          "duration": 75.54327700000067,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientForm",
            "Form Validation",
            "Birth Date Field"
          ],
          "fullName": "ClientForm Form Validation Birth Date Field should accept valid age (between 16 and 120)",
          "status": "passed",
          "title": "should accept valid age (between 16 and 120)",
          "duration": 50.941609000001336,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Submission"],
          "fullName": "ClientForm Form Submission should submit form with valid data",
          "status": "passed",
          "title": "should submit form with valid data",
          "duration": 251.4714010000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Submission"],
          "fullName": "ClientForm Form Submission should clean CPF before submission",
          "status": "passed",
          "title": "should clean CPF before submission",
          "duration": 245.2481829999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Submission"],
          "fullName": "ClientForm Form Submission should not submit when form is invalid",
          "status": "passed",
          "title": "should not submit when form is invalid",
          "duration": 205.25987799999893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Submission"],
          "fullName": "ClientForm Form Submission should disable submit button when form is invalid",
          "status": "passed",
          "title": "should disable submit button when form is invalid",
          "duration": 35.52980600000046,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Form Submission"],
          "fullName": "ClientForm Form Submission should enable submit button when form is valid",
          "status": "passed",
          "title": "should enable submit button when form is valid",
          "duration": 218.28329399999893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Loading State"],
          "fullName": "ClientForm Loading State should show loading text when isLoading is true",
          "status": "passed",
          "title": "should show loading text when isLoading is true",
          "duration": 5.621031999999104,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Loading State"],
          "fullName": "ClientForm Loading State should disable all inputs when loading",
          "status": "passed",
          "title": "should disable all inputs when loading",
          "duration": 27.49087200000031,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Loading State"],
          "fullName": "ClientForm Loading State should enable all inputs when not loading",
          "status": "passed",
          "title": "should enable all inputs when not loading",
          "duration": 23.079531999999745,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Cancel Functionality"],
          "fullName": "ClientForm Cancel Functionality should call onCancel when cancel button is clicked",
          "status": "passed",
          "title": "should call onCancel when cancel button is clicked",
          "duration": 28.708128999998735,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Initial Data Handling"],
          "fullName": "ClientForm Initial Data Handling should populate form with initial data",
          "status": "passed",
          "title": "should populate form with initial data",
          "duration": 5.557423000000199,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Initial Data Handling"],
          "fullName": "ClientForm Initial Data Handling should handle partial initial data",
          "status": "passed",
          "title": "should handle partial initial data",
          "duration": 6.246322000000873,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "CPF Real-time Validation"],
          "fullName": "ClientForm CPF Real-time Validation should update visual indicator when CPF changes",
          "status": "passed",
          "title": "should update visual indicator when CPF changes",
          "duration": 162.18349800000033,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "CPF Real-time Validation"],
          "fullName": "ClientForm CPF Real-time Validation should show validation message for valid CPF",
          "status": "passed",
          "title": "should show validation message for valid CPF",
          "duration": 85.5140850000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "CPF Real-time Validation"],
          "fullName": "ClientForm CPF Real-time Validation should not show validation message when no CPF is entered",
          "status": "passed",
          "title": "should not show validation message when no CPF is entered",
          "duration": 7.343131999999969,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Accessibility"],
          "fullName": "ClientForm Accessibility should have proper labels and associations",
          "status": "passed",
          "title": "should have proper labels and associations",
          "duration": 5.84328800000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Accessibility"],
          "fullName": "ClientForm Accessibility should show error messages with proper ARIA associations",
          "status": "passed",
          "title": "should show error messages with proper ARIA associations",
          "duration": 51.07424699999865,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["ClientForm", "Accessibility"],
          "fullName": "ClientForm Accessibility should apply proper CSS classes for validation states",
          "status": "passed",
          "title": "should apply proper CSS classes for validation states",
          "duration": 80.57662100000016,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1755251682576,
      "endTime": 1755251695387.5767,
      "status": "failed",
      "message": "",
      "name": "/home/galvani/dev/iam-dashboard/apps/web/tests/__tests__/components/ClientForm.test.tsx"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AuthService", "Singleton Instance"],
          "fullName": "AuthService Singleton Instance should export a singleton instance",
          "status": "passed",
          "title": "should export a singleton instance",
          "duration": 1.4010409999999638,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "Singleton Instance"],
          "fullName": "AuthService Singleton Instance should export AuthService class for testing",
          "status": "passed",
          "title": "should export AuthService class for testing",
          "duration": 0.43784900000002835,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "login"],
          "fullName": "AuthService login should successfully login with email and password",
          "status": "passed",
          "title": "should successfully login with email and password",
          "duration": 1.574143999999933,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "login"],
          "fullName": "AuthService login should successfully login with 2FA code",
          "status": "passed",
          "title": "should successfully login with 2FA code",
          "duration": 0.3639210000000048,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "login"],
          "fullName": "AuthService login should handle login failure with custom error message",
          "status": "passed",
          "title": "should handle login failure with custom error message",
          "duration": 1.104345999999964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "login"],
          "fullName": "AuthService login should handle login failure with default error message",
          "status": "passed",
          "title": "should handle login failure with default error message",
          "duration": 0.2992900000000418,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "logout"],
          "fullName": "AuthService logout should successfully logout",
          "status": "passed",
          "title": "should successfully logout",
          "duration": 0.3161119999999755,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "logout"],
          "fullName": "AuthService logout should not throw error when logout fails",
          "status": "passed",
          "title": "should not throw error when logout fails",
          "duration": 0.4807789999999841,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "refreshToken"],
          "fullName": "AuthService refreshToken should successfully refresh token",
          "status": "passed",
          "title": "should successfully refresh token",
          "duration": 0.49168999999994867,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "refreshToken"],
          "fullName": "AuthService refreshToken should handle refresh token failure",
          "status": "passed",
          "title": "should handle refresh token failure",
          "duration": 0.3677779999999302,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "getCurrentUser"],
          "fullName": "AuthService getCurrentUser should successfully get current user",
          "status": "passed",
          "title": "should successfully get current user",
          "duration": 0.3760930000000826,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "getCurrentUser"],
          "fullName": "AuthService getCurrentUser should handle getCurrentUser failure",
          "status": "passed",
          "title": "should handle getCurrentUser failure",
          "duration": 0.3102209999999559,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "2FA Methods", "setup2FA"],
          "fullName": "AuthService 2FA Methods setup2FA should successfully setup 2FA",
          "status": "passed",
          "title": "should successfully setup 2FA",
          "duration": 0.3528599999999642,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "2FA Methods", "setup2FA"],
          "fullName": "AuthService 2FA Methods setup2FA should handle setup2FA failure",
          "status": "passed",
          "title": "should handle setup2FA failure",
          "duration": 0.4137140000000272,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "2FA Methods", "enable2FA"],
          "fullName": "AuthService 2FA Methods enable2FA should successfully enable 2FA",
          "status": "passed",
          "title": "should successfully enable 2FA",
          "duration": 0.4119510000000446,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "2FA Methods", "enable2FA"],
          "fullName": "AuthService 2FA Methods enable2FA should handle enable2FA failure",
          "status": "passed",
          "title": "should handle enable2FA failure",
          "duration": 0.34872199999995246,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "2FA Methods", "disable2FA"],
          "fullName": "AuthService 2FA Methods disable2FA should successfully disable 2FA",
          "status": "passed",
          "title": "should successfully disable 2FA",
          "duration": 0.3170629999999619,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "2FA Methods",
            "generateBackupCodes"
          ],
          "fullName": "AuthService 2FA Methods generateBackupCodes should successfully generate backup codes",
          "status": "passed",
          "title": "should successfully generate backup codes",
          "duration": 0.34844200000009096,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Password Management",
            "changePassword"
          ],
          "fullName": "AuthService Password Management changePassword should successfully change password",
          "status": "passed",
          "title": "should successfully change password",
          "duration": 0.3976030000000037,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Password Management",
            "changePassword"
          ],
          "fullName": "AuthService Password Management changePassword should handle change password failure",
          "status": "passed",
          "title": "should handle change password failure",
          "duration": 0.2546859999999924,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Password Management",
            "requestPasswordReset"
          ],
          "fullName": "AuthService Password Management requestPasswordReset should successfully request password reset",
          "status": "passed",
          "title": "should successfully request password reset",
          "duration": 0.40777300000002015,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Password Management",
            "resetPassword"
          ],
          "fullName": "AuthService Password Management resetPassword should successfully reset password",
          "status": "passed",
          "title": "should successfully reset password",
          "duration": 0.3697019999999611,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Password Management",
            "verifyEmail"
          ],
          "fullName": "AuthService Password Management verifyEmail should successfully verify email",
          "status": "passed",
          "title": "should successfully verify email",
          "duration": 0.34426399999995283,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Session Management",
            "getUserSessions"
          ],
          "fullName": "AuthService Session Management getUserSessions should successfully get user sessions",
          "status": "passed",
          "title": "should successfully get user sessions",
          "duration": 0.3171029999999746,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Session Management",
            "revokeSession"
          ],
          "fullName": "AuthService Session Management revokeSession should successfully revoke session",
          "status": "passed",
          "title": "should successfully revoke session",
          "duration": 0.27476400000000467,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AuthService",
            "Session Management",
            "revokeAllOtherSessions"
          ],
          "fullName": "AuthService Session Management revokeAllOtherSessions should successfully revoke all other sessions",
          "status": "passed",
          "title": "should successfully revoke all other sessions",
          "duration": 0.27585499999997865,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "Error Handling"],
          "fullName": "AuthService Error Handling should handle HTTP errors with detailed messages",
          "status": "passed",
          "title": "should handle HTTP errors with detailed messages",
          "duration": 0.4338109999999915,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "Error Handling"],
          "fullName": "AuthService Error Handling should handle HTTP errors without detail property",
          "status": "passed",
          "title": "should handle HTTP errors without detail property",
          "duration": 0.5084310000000869,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "Error Handling"],
          "fullName": "AuthService Error Handling should handle network errors without response",
          "status": "passed",
          "title": "should handle network errors without response",
          "duration": 0.3962810000000445,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "Error Handling"],
          "fullName": "AuthService Error Handling should handle undefined errors",
          "status": "passed",
          "title": "should handle undefined errors",
          "duration": 0.34600699999998596,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AuthService", "API Path Configuration"],
          "fullName": "AuthService API Path Configuration should use correct API path for all endpoints",
          "status": "passed",
          "title": "should use correct API path for all endpoints",
          "duration": 0.18715000000008786,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1755251682500,
      "endTime": 1755251682516.1873,
      "status": "passed",
      "message": "",
      "name": "/home/galvani/dev/iam-dashboard/apps/web/tests/__tests__/services/authService.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ClientsService - Simple HTTP Integration Tests",
            "HTTP Client Integration"
          ],
          "fullName": "ClientsService - Simple HTTP Integration Tests HTTP Client Integration should make POST request to create client",
          "status": "passed",
          "title": "should make POST request to create client",
          "duration": 3.804083999999989,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientsService - Simple HTTP Integration Tests",
            "HTTP Client Integration"
          ],
          "fullName": "ClientsService - Simple HTTP Integration Tests HTTP Client Integration should make GET request to fetch client by ID",
          "status": "passed",
          "title": "should make GET request to fetch client by ID",
          "duration": 0.4961680000000115,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientsService - Simple HTTP Integration Tests",
            "HTTP Client Integration"
          ],
          "fullName": "ClientsService - Simple HTTP Integration Tests HTTP Client Integration should make GET request to list clients",
          "status": "passed",
          "title": "should make GET request to list clients",
          "duration": 0.6427919999999858,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientsService - Simple HTTP Integration Tests",
            "HTTP Client Integration"
          ],
          "fullName": "ClientsService - Simple HTTP Integration Tests HTTP Client Integration should make PUT request to update client",
          "status": "passed",
          "title": "should make PUT request to update client",
          "duration": 0.6343760000000884,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientsService - Simple HTTP Integration Tests",
            "HTTP Client Integration"
          ],
          "fullName": "ClientsService - Simple HTTP Integration Tests HTTP Client Integration should make DELETE request to delete client",
          "status": "passed",
          "title": "should make DELETE request to delete client",
          "duration": 0.4339220000000523,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientsService - Simple HTTP Integration Tests",
            "Error Handling"
          ],
          "fullName": "ClientsService - Simple HTTP Integration Tests Error Handling should handle HTTP errors and return Portuguese messages",
          "status": "passed",
          "title": "should handle HTTP errors and return Portuguese messages",
          "duration": 1.6505869999999732,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClientsService - Simple HTTP Integration Tests",
            "Error Handling"
          ],
          "fullName": "ClientsService - Simple HTTP Integration Tests Error Handling should handle network errors",
          "status": "passed",
          "title": "should handle network errors",
          "duration": 0.4840149999999994,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1755251682497,
      "endTime": 1755251682505.6506,
      "status": "passed",
      "message": "",
      "name": "/home/galvani/dev/iam-dashboard/apps/web/tests/__tests__/services/clients.service.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["HttpClient", "Constructor and Initialization"],
          "fullName": "HttpClient Constructor and Initialization should create axios instance with correct configuration",
          "status": "passed",
          "title": "should create axios instance with correct configuration",
          "duration": 2.894644000000085,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Constructor and Initialization"],
          "fullName": "HttpClient Constructor and Initialization should use default baseURL when env variable is not set",
          "status": "passed",
          "title": "should use default baseURL when env variable is not set",
          "duration": 0.7653010000000222,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Constructor and Initialization"],
          "fullName": "HttpClient Constructor and Initialization should setup request and response interceptors",
          "status": "passed",
          "title": "should setup request and response interceptors",
          "duration": 0.6360290000000077,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Constructor and Initialization"],
          "fullName": "HttpClient Constructor and Initialization should export singleton instance",
          "status": "passed",
          "title": "should export singleton instance",
          "duration": 0.5157840000000533,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Request Interceptor"],
          "fullName": "HttpClient Request Interceptor should add authorization header when tokens are available",
          "status": "passed",
          "title": "should add authorization header when tokens are available",
          "duration": 0.5648570000000745,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Request Interceptor"],
          "fullName": "HttpClient Request Interceptor should not add authorization header when no tokens available",
          "status": "passed",
          "title": "should not add authorization header when no tokens available",
          "duration": 0.5532749999999851,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Request Interceptor"],
          "fullName": "HttpClient Request Interceptor should handle request interceptor errors",
          "status": "passed",
          "title": "should handle request interceptor errors",
          "duration": 1.466252000000054,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Response Interceptor"],
          "fullName": "HttpClient Response Interceptor should pass through successful responses",
          "status": "passed",
          "title": "should pass through successful responses",
          "duration": 0.6106019999999717,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Response Interceptor"],
          "fullName": "HttpClient Response Interceptor should handle 401 errors with token refresh",
          "status": "passed",
          "title": "should handle 401 errors with token refresh",
          "duration": 0.7902579999999944,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Response Interceptor"],
          "fullName": "HttpClient Response Interceptor should handle failed token refresh",
          "status": "passed",
          "title": "should handle failed token refresh",
          "duration": 2.2316139999999223,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Response Interceptor"],
          "fullName": "HttpClient Response Interceptor should not retry already retried requests",
          "status": "passed",
          "title": "should not retry already retried requests",
          "duration": 0.6852610000000823,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Response Interceptor"],
          "fullName": "HttpClient Response Interceptor should pass through non-401 errors",
          "status": "passed",
          "title": "should pass through non-401 errors",
          "duration": 0.5449290000000246,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Token Refresh Logic"],
          "fullName": "HttpClient Token Refresh Logic should refresh tokens successfully",
          "status": "passed",
          "title": "should refresh tokens successfully",
          "duration": 1.4257470000000012,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Token Refresh Logic"],
          "fullName": "HttpClient Token Refresh Logic should handle refresh failure when no refresh token available",
          "status": "passed",
          "title": "should handle refresh failure when no refresh token available",
          "duration": 1.22844699999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Token Refresh Logic"],
          "fullName": "HttpClient Token Refresh Logic should handle refresh API failure",
          "status": "passed",
          "title": "should handle refresh API failure",
          "duration": 1.1277390000000196,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Token Refresh Logic"],
          "fullName": "HttpClient Token Refresh Logic should not make multiple concurrent refresh requests",
          "status": "passed",
          "title": "should not make multiple concurrent refresh requests",
          "duration": 101.57209799999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "GET"],
          "fullName": "HttpClient HTTP Methods GET should make GET request and return data",
          "status": "passed",
          "title": "should make GET request and return data",
          "duration": 1.0094679999999698,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "GET"],
          "fullName": "HttpClient HTTP Methods GET should pass config to GET request",
          "status": "passed",
          "title": "should pass config to GET request",
          "duration": 1.020578999999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "POST"],
          "fullName": "HttpClient HTTP Methods POST should make POST request and return data",
          "status": "passed",
          "title": "should make POST request and return data",
          "duration": 0.7958889999999883,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "POST"],
          "fullName": "HttpClient HTTP Methods POST should pass config to POST request",
          "status": "passed",
          "title": "should pass config to POST request",
          "duration": 0.7162899999999581,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "PUT"],
          "fullName": "HttpClient HTTP Methods PUT should make PUT request and return data",
          "status": "passed",
          "title": "should make PUT request and return data",
          "duration": 0.7870820000000549,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "PATCH"],
          "fullName": "HttpClient HTTP Methods PATCH should make PATCH request and return data",
          "status": "passed",
          "title": "should make PATCH request and return data",
          "duration": 0.5831409999999551,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "DELETE"],
          "fullName": "HttpClient HTTP Methods DELETE should make DELETE request and return data",
          "status": "passed",
          "title": "should make DELETE request and return data",
          "duration": 0.5582849999999553,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "HTTP Methods", "DELETE"],
          "fullName": "HttpClient HTTP Methods DELETE should pass config to DELETE request",
          "status": "passed",
          "title": "should pass config to DELETE request",
          "duration": 0.52613400000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HttpClient",
            "Auth Status Methods",
            "shouldRefreshTokens"
          ],
          "fullName": "HttpClient Auth Status Methods shouldRefreshTokens should return true when token is expired",
          "status": "passed",
          "title": "should return true when token is expired",
          "duration": 0.5044540000000097,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HttpClient",
            "Auth Status Methods",
            "shouldRefreshTokens"
          ],
          "fullName": "HttpClient Auth Status Methods shouldRefreshTokens should return false when token is not expired",
          "status": "passed",
          "title": "should return false when token is not expired",
          "duration": 0.5403200000000652,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HttpClient",
            "Auth Status Methods",
            "shouldRefreshTokens"
          ],
          "fullName": "HttpClient Auth Status Methods shouldRefreshTokens should return false when no access token available",
          "status": "passed",
          "title": "should return false when no access token available",
          "duration": 0.4895560000001069,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HttpClient",
            "Auth Status Methods",
            "isAuthenticated"
          ],
          "fullName": "HttpClient Auth Status Methods isAuthenticated should return true when valid token exists",
          "status": "passed",
          "title": "should return true when valid token exists",
          "duration": 0.571819000000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HttpClient",
            "Auth Status Methods",
            "isAuthenticated"
          ],
          "fullName": "HttpClient Auth Status Methods isAuthenticated should return false when token is expired",
          "status": "passed",
          "title": "should return false when token is expired",
          "duration": 0.4956770000000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HttpClient",
            "Auth Status Methods",
            "isAuthenticated"
          ],
          "fullName": "HttpClient Auth Status Methods isAuthenticated should return false when no tokens available",
          "status": "passed",
          "title": "should return false when no tokens available",
          "duration": 0.4908980000000156,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HttpClient",
            "Auth Status Methods",
            "isAuthenticated"
          ],
          "fullName": "HttpClient Auth Status Methods isAuthenticated should return false when no access token available",
          "status": "passed",
          "title": "should return false when no access token available",
          "duration": 0.5322250000000395,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Error Handling"],
          "fullName": "HttpClient Error Handling should handle axios errors properly",
          "status": "passed",
          "title": "should handle axios errors properly",
          "duration": 0.6736600000000408,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Error Handling"],
          "fullName": "HttpClient Error Handling should handle auth failure events",
          "status": "passed",
          "title": "should handle auth failure events",
          "duration": 0.8622130000001107,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["HttpClient", "Concurrent Request Handling"],
          "fullName": "HttpClient Concurrent Request Handling should handle multiple requests during token refresh",
          "status": "passed",
          "title": "should handle multiple requests during token refresh",
          "duration": 51.27166699999998,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1755251682501,
      "endTime": 1755251682682.2717,
      "status": "passed",
      "message": "",
      "name": "/home/galvani/dev/iam-dashboard/apps/web/tests/__tests__/services/httpClient.test.ts"
    }
  ]
}
